name: Deploy to ECR

on:
  push:
    branches: [ develop, main ]

permissions:
  id-token: write
  contents: read

jobs:

  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::206585828494:role/ProductsRole
        role-session-name: git_actions
        aws-region: ${{ github.ref == 'refs/heads/main' && 'us-east-1' || 'us-east-2' }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build bot image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: maria-dashboard
        IMAGE_TAG: "latest"
        AWS_DEFAULT_REGION: ${{ github.ref == 'refs/heads/main' && 'us-east-1' || 'us-east-2' }}
        role-to-assume: arn:aws:iam::206585828494:role/ProductsRole
        role-session-name: git_actions
      run: |
        aws ecr get-login-password --region ${{ github.ref == 'refs/heads/main' && 'us-east-1' || 'us-east-2' }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
        docker build --build-arg AWS_DEFAULT_REGION=${{ github.ref == 'refs/heads/main' && 'us-east-1' || 'us-east-2' }} --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -f ./Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
